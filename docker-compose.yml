version: '3.7'
services: 
  vue-frontend:
    build:
      context: image-front
    container_name: vue-frontend
    volumes:
      - ../front:/app
    networks:
      - network-laravel-vue
    expose:
      - "5173"
    command: ['yarn', 'dev']
    depends_on:
      - laravel-backend
  laravel-backend:
    build:
      # para conseguir ver o pasta do back, dado que ele usa o context
      context: ..
      dockerfile: docker-laravel-vue/image-back/Dockerfile
    container_name: laravel-backend
    volumes:
      - ../back:/var/www/html
    networks:
      - network-laravel-vue
    expose:
      - "9000"
    depends_on:
      - mysql
  mysql:
    build: image-mysql
    image: image-mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sib}
      MYSQL_USER: ${MYSQL_USER:-sib}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sib}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD:-} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - "/var/lib/mysql:/var/lib/mysql"
    networks:
      - network-laravel-vue

  nginx:
      image: nginx:alpine
      container_name: nginx
      restart: always
      ports:
        - "91:80"
      volumes:
        - ./image-nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        - ../back:/var/www/html
      networks:
        - network-laravel-vue
      depends_on:
        - vue-frontend
        - laravel-backend
networks:
  network-laravel-vue:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16
          gateway: 172.27.0.1
